Timer unit: 4.1058e-07 s

File: calc_phase.py
Function: calc_phase at line 5
Total time: 0.101558 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                           @profile
     6                                           def calc_phase (data):
     7                                           
     8                                               # Setup 9-pixels
     9         1           67     67.0      0.0      I1 = data[:-2,:-2] 
    10         1           12     12.0      0.0      I2 = data[:-2,1:-1] 
    11         1            8      8.0      0.0      I3 = data[:-2,2:] 
    12         1            8      8.0      0.0      I4 = data[1:-1,:-2] 
    13         1            9      9.0      0.0      I5 = data[1:-1,1:-1] 
    14         1            8      8.0      0.0      I6 = data[1:-1,2:] 
    15         1            8      8.0      0.0      I7 = data[2:,:-2] 
    16         1            9      9.0      0.0      I8 = data[2:,1:-1] 
    17         1            9      9.0      0.0      I9 = data[2:,2:]
    18                                           
    19                                               # Intensity and modulation stolen from Jason by Jason
    20         1        18825  18825.0      7.6      intensity = I5 + 0.5*(I2+I4+I6+I8) + 0.25*(I1+I3+I5+I7+I9)
    21                                               
    22                                               #quality = np.array(modulation > 0.0, 'b')
    23                                               
    24         1         7791   7791.0      3.1      num = 2*(I2+I8-I4-I6)+.0001 #addition to avoid division by zero
    25         1         9847   9847.0      4.0      den = 4*I5-I1-I3-I7-I9+.0001 #addition to avoid division by zero
    26                                           
    27         1        18306  18306.0      7.4      modulation = np.sqrt(num**2+den**2)/(2*intensity+.0001)
    28         1         3501   3501.0      1.4      modulation[modulation>1]=0
    29                                           
    30                                               # Create two masks when atan and acot need to be applied  
    31         1           58     58.0      0.0      a_mask = np.zeros(modulation.shape, 'bool')
    32         1          121    121.0      0.0      a_mask[::2,::2]=True
    33         1          104    104.0      0.0      a_mask[1::2,1::2]=True
    34         1         5765   5765.0      2.3      tmp1 = num/den
    35         1        17649  17649.0      7.1      tmp1[~a_mask] = 1/tmp1[~a_mask]
    36         1        38563  38563.0     15.6      phase = np.array(np.arctan(tmp1),'f')
    37         1         2770   2770.0      1.1      print type(phase), type(phase[0,0])
    38         1        58556  58556.0     23.7      t1 = np.arctan(tmp1)
    39         1         4613   4613.0      1.9      print type(t1), type(t1[0,0])
    40                                           
    41                                               # Fix me some phase offsets
    42         1        14563  14563.0      5.9      phase[(~a_mask) & (phase<0) & (num>0)] += np.pi
    43         1        13266  13266.0      5.4      phase[(a_mask) & (phase<0) & (den>0)] += np.pi
    44         1        16785  16785.0      6.8      phase[(phase>0) & (phase<np.pi/2) & (num>0)] -= np.pi
    45         1          479    479.0      0.2      phase[:,::2] += np.pi
    46         1        11723  11723.0      4.7      phase[phase>=np.pi] -= 2*np.pi
    47                                           
    48                                               # Map phase [-2pi:2pi] -> [0,255]
    49         1           10     10.0      0.0      t2 = 255/(2*np.pi)
    50         1          827    827.0      0.3      phase+=np.pi
    51         1          811    811.0      0.3      phase*=t2
    52         1         2274   2274.0      0.9      phase = np.array(phase,'B')
    53                                           
    54         1            7      7.0      0.0      return phase, modulation, intensity

